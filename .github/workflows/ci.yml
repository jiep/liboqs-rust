on: [push, pull_request]

name: Continuous integration

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-20.04
          - windows-latest
        rust:
          - stable
    env:
      # 20 MiB stack
      RUST_MIN_STACK: 20971520

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set stack size
        if: startsWith(matrix.os, 'windows')
        run: echo "RUSTFLAGS=-C link-arg=/STACK:20971520" >> $env:GITHUB_ENV

      - name: Install OpenSSL
        if: startsWith(matrix.os, 'windows')
        run: choco install openssl --limit-output

      - name: Set OPENSSL_ROOT_DIR
        if: startsWith(matrix.os, 'windows')
        run: echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64" >> $env:GITHUB_ENV

      - name: Set OPENSSL_ROOT_DIR
        if: startsWith(matrix.os, 'macos')
        run: echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Cargo build
        run: cargo build

      - name: Cargo test
        run: cargo test

      - name: Cargo test --no-default-features --features serde,kems,sigs,std
        run: cargo test --no-default-features --features serde,kems,sigs,std --manifest-path oqs/Cargo.toml

      - name: Cargo test --no-default-features --features serde,kems,sigs
        run: cargo test --no-default-features --features serde,kems,sigs --manifest-path oqs/Cargo.toml

      - name: Cargo test --no-default-features --features non_portable,kems,sigs,std
        run: cargo test --no-default-features --features non_portable,kems,sigs,std --manifest-path oqs/Cargo.toml

      - name: Cargo fmt
        run: cargo fmt --all -- --check

      - name: Cargo clippy
        run: cargo clippy

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :
